{
    "swagger": "2.0",
    "info": {
        "description": "Use the Pixiu APIs to your cloud",
        "title": "Pixiu API Documentation",
        "termsOfService": "https://github.com/caoyingjunz/pixiu",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/caoyingjunz/pixiu",
            "email": "support@pixiu.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8090",
    "paths": {
        "/clouds/build": {
            "post": {
                "description": "自建 kubernetes 集群",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clouds"
                ],
                "summary": "自建 kubernetes 集群",
                "parameters": [
                    {
                        "description": "build a cloud",
                        "name": "buildCloud",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BuildCloud"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/clouds/ping": {
            "post": {
                "description": "通过 kubeConfig 检测与 kubernetes 集群的连通性",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clouds"
                ],
                "summary": "Ping a cloud",
                "parameters": [
                    {
                        "type": "file",
                        "description": "kubernetes kubeconfig",
                        "name": "kubeconfig",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/clouds/v1/{cloud_name}/kubeconfigs": {
            "get": {
                "description": "get by cloud kubeConfig ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubeConfigs"
                ],
                "summary": "get a cloud custom kubeConfig",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "cloud name",
                        "name": "cloud_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.KubeConfigOptions"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update by cloud kubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubeConfigs"
                ],
                "summary": "Update a cloud custom kubeConfig",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "cloud name",
                        "name": "cloud_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Cloud ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.KubeConfigOptions"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create by cloud kubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubeConfigs"
                ],
                "summary": "Create a cloud custom kubeConfig",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "cloud name",
                        "name": "cloud_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "service_account, cluster_role",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.KubeConfigOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.KubeConfigOptions"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    }
                }
            }
        },
        "/clouds/v1/{cloud_name}/kubeconfigs/{id}": {
            "get": {
                "description": "get by cloud kubeConfig ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubeConfigs"
                ],
                "summary": "get a cloud custom kubeConfig",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "cloud name",
                        "name": "cloud_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "kubeConfig ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.KubeConfigOptions"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete by cloud kubeConfig ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubeConfigs"
                ],
                "summary": "Delete a cloud custom kubeConfig",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "cloud name",
                        "name": "cloud_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Cloud ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    }
                }
            }
        },
        "/clouds/{id}": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clouds"
                ],
                "summary": "Get a cloud",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Cloud ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete by cloud ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clouds"
                ],
                "summary": "Delete a cloud",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Cloud ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "health check",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/menus": {
            "get": {
                "description": "List menus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menus"
                ],
                "summary": "List menus",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "menu_type 1: 菜单,2： 按钮, 3：API,可填写多个； 默认为： 1,2,3",
                        "name": "menu_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.PageMenu"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/menus/{id}": {
            "get": {
                "description": "Get menu by menu id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menus"
                ],
                "summary": "Get menu by menu id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "menu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/model.Menu"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a menu by menu id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menus"
                ],
                "summary": "Update a menu by menu id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "menu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "menu info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateMenusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete menu by menu id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menus"
                ],
                "summary": "Delete menu by menu id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "menu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/menus/{id}/status/{status}": {
            "put": {
                "description": "Update a menu status by menu id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menus"
                ],
                "summary": "Update a menu status by menu id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "menu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "status ",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "list roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "list roles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/model.PageRole"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create a role",
                "parameters": [
                    {
                        "description": "role info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "description": "get role by role id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "get role by role id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "put": {
                "description": "update role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "update role",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "role info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "delete role",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/roles/{id}/menus": {
            "get": {
                "description": "get permissions by role id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "get permissions by role id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/model.Menu"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "set permissions for role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "set permissions for role",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "menu ids",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Menus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/model.Menu"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/roles/{id}/status/{status}": {
            "put": {
                "description": "Update role status by role id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Update role status by role id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "menu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "status ",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "List user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List user info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/model.PageUser"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update  user",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "user info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/users/:id/status/:status": {
            "put": {
                "description": "Update  user status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update  user status",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "status",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/users/menus": {
            "get": {
                "description": "Get left menus  by current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get left menus by current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Menu"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/users/permissions": {
            "get": {
                "description": "Get user permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user permission",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get user info by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user info by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "put": {
                "description": "Change user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "password info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/users/{id}/roles": {
            "get": {
                "description": "Get users roles by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user roles by user id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/model.Role"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Assign User Roles base on user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Assign User Roles base on user id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "role ids",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Roles"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputils.HttpError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "httputils.HttpOK": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "result": {
                    "type": "string",
                    "example": "any result"
                }
            }
        },
        "httputils.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "返回的状态码",
                    "type": "integer"
                },
                "message": {
                    "description": "异常返回时的错误信息",
                    "type": "string"
                },
                "result": {
                    "description": "正常返回时的数据，可以为任意数据结构"
                }
            }
        },
        "model.Menu": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Menu"
                    }
                },
                "code": {
                    "description": "前端鉴权code 例： user:role:add, user:role:delete",
                    "type": "string"
                },
                "gmt_create": {
                    "type": "string"
                },
                "gmt_modified": {
                    "type": "string"
                },
                "icon": {
                    "description": "icon",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "memo": {
                    "description": "备注",
                    "type": "string"
                },
                "menu_type": {
                    "description": "菜单类型 1 左侧菜单,2 按钮, 3 非展示权限",
                    "type": "integer"
                },
                "method": {
                    "description": "操作类型 none/GET/POST/PUT/DELETE",
                    "type": "string"
                },
                "name": {
                    "description": "菜单名称",
                    "type": "string"
                },
                "parent_id": {
                    "description": "父级ID",
                    "type": "integer"
                },
                "resource_version": {
                    "type": "integer"
                },
                "sequence": {
                    "description": "排序值",
                    "type": "integer"
                },
                "status": {
                    "description": "状态(1:启用 2:不启用)",
                    "type": "integer"
                },
                "url": {
                    "description": "菜单URL",
                    "type": "string"
                }
            }
        },
        "model.PageMenu": {
            "type": "object",
            "properties": {
                "menus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Menu"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.PageRole": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.PageUser": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                }
            }
        },
        "model.Role": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "gmt_create": {
                    "type": "string"
                },
                "gmt_modified": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "memo": {
                    "description": "备注",
                    "type": "string"
                },
                "name": {
                    "description": "名称",
                    "type": "string"
                },
                "parent_id": {
                    "description": "父级ID",
                    "type": "integer"
                },
                "resource_version": {
                    "type": "integer"
                },
                "sequence": {
                    "description": "排序值",
                    "type": "integer"
                },
                "status": {
                    "description": "0 表示禁用，1 表示启用",
                    "type": "integer"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "gmt_create": {
                    "type": "string"
                },
                "gmt_modified": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "resource_version": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "types.BuildCloud": {
            "type": "object",
            "properties": {
                "alias_name": {
                    "description": "可读性的名称，支持中午",
                    "type": "string"
                },
                "cloud_type": {
                    "description": "cloud 的类型，支持标准类型和自建类型",
                    "type": "integer"
                },
                "create_namespace": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "immediate": {
                    "description": "立刻部署",
                    "type": "boolean"
                },
                "kubernetes": {
                    "description": "k8s 全部信息",
                    "$ref": "#/definitions/types.KubernetesSpec"
                },
                "name": {
                    "description": "名称，系统自动生成，只能为字符串",
                    "type": "string"
                },
                "region": {
                    "description": "城市区域",
                    "type": "string"
                }
            }
        },
        "types.KubeConfigOptions": {
            "type": "object",
            "properties": {
                "cloud_name": {
                    "type": "string"
                },
                "cluster_role": {
                    "type": "string"
                },
                "config": {
                    "type": "string"
                },
                "expiration_timestamp": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "service_account": {
                    "type": "string"
                }
            }
        },
        "types.KubernetesSpec": {
            "type": "object",
            "properties": {
                "api_server": {
                    "description": "kubernetes 的 apiServer 的 ip 地址",
                    "type": "string"
                },
                "cni": {
                    "description": "网络 cni，支持 flannel 和 calico",
                    "type": "string"
                },
                "masters": {
                    "description": "集群的 master 节点",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.NodeSpec"
                    }
                },
                "nodes": {
                    "description": "集群的 node 节点",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.NodeSpec"
                    }
                },
                "pod_cidr": {
                    "type": "string"
                },
                "proxy_mode": {
                    "description": "kubeProxy 的模式，只能是 iptables 和 ipvs",
                    "type": "string"
                },
                "runtime": {
                    "description": "容器运行时，目前支持 docker 和 containerd",
                    "type": "string"
                },
                "service_cidr": {
                    "type": "string"
                },
                "version": {
                    "description": "k8s 的版本",
                    "type": "string"
                }
            }
        },
        "types.Menus": {
            "type": "object",
            "properties": {
                "menu_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.MenusReq": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "前端鉴权code 例： user:role:add, user:role:delete",
                    "type": "string"
                },
                "icon": {
                    "description": "icon",
                    "type": "string"
                },
                "memo": {
                    "description": "备注",
                    "type": "string"
                },
                "menu_type": {
                    "description": "菜单类型 1 左侧菜单,2 按钮, 3 非展示权限",
                    "type": "integer"
                },
                "method": {
                    "description": "操作类型 none/GET/POST/PUT/DELETE",
                    "type": "string"
                },
                "name": {
                    "description": "菜单名称",
                    "type": "string"
                },
                "parent_id": {
                    "description": "父级ID",
                    "type": "integer"
                },
                "sequence": {
                    "description": "排序值",
                    "type": "integer"
                },
                "status": {
                    "description": "状态(1:启用 2:不启用)",
                    "type": "integer"
                },
                "url": {
                    "description": "菜单URL",
                    "type": "string"
                }
            }
        },
        "types.NodeSpec": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "host_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "types.Password": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "origin_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "types.RoleReq": {
            "type": "object",
            "properties": {
                "memo": {
                    "description": "备注",
                    "type": "string"
                },
                "name": {
                    "description": "名称",
                    "type": "string"
                },
                "parent_id": {
                    "description": "父级ID",
                    "type": "integer"
                },
                "sequence": {
                    "description": "排序值",
                    "type": "integer"
                },
                "status": {
                    "description": "0 表示禁用，1 表示启用",
                    "type": "integer"
                }
            }
        },
        "types.Roles": {
            "type": "object",
            "properties": {
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.UpdateMenusReq": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "前端鉴权code 例： user:role:add, user:role:delete",
                    "type": "string"
                },
                "icon": {
                    "description": "icon",
                    "type": "string"
                },
                "memo": {
                    "description": "备注",
                    "type": "string"
                },
                "menu_type": {
                    "description": "菜单类型 1 左侧菜单,2 按钮, 3 非展示权限",
                    "type": "integer"
                },
                "method": {
                    "description": "操作类型 none/GET/POST/PUT/DELETE",
                    "type": "string"
                },
                "name": {
                    "description": "菜单名称",
                    "type": "string"
                },
                "parent_id": {
                    "description": "父级ID",
                    "type": "integer"
                },
                "resource_version": {
                    "type": "integer"
                },
                "sequence": {
                    "description": "排序值",
                    "type": "integer"
                },
                "status": {
                    "description": "状态(1:启用 2:不启用)",
                    "type": "integer"
                },
                "url": {
                    "description": "菜单URL",
                    "type": "string"
                }
            }
        },
        "types.UpdateRoleReq": {
            "type": "object",
            "properties": {
                "memo": {
                    "description": "备注",
                    "type": "string"
                },
                "name": {
                    "description": "名称",
                    "type": "string"
                },
                "parent_id": {
                    "description": "父级ID",
                    "type": "integer"
                },
                "resource_version": {
                    "type": "integer"
                },
                "sequence": {
                    "description": "排序值",
                    "type": "integer"
                },
                "status": {
                    "description": "0 表示禁用，1 表示启用",
                    "type": "integer"
                }
            }
        },
        "types.User": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gmt_create": {},
                "gmt_modified": {},
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "resource_version": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}